package Com.Test;

import java.io.File;
import java.io.IOException;
import java.util.HashMap;

import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.util.EntityUtils;
import org.json.JSONException;
import org.json.JSONObject;
import org.testng.Assert;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import com.fasterxml.jackson.core.JsonGenerationException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;

import Com.client.restClient;
import Com.data.Users;
import Com.restApi.testBase;

public class PostAPITest extends testBase {

	testBase testbase;
	String serviceUrl;
	String url;
	String apiUrl;
	restClient restclient;
	CloseableHttpResponse closeableHttpResponse;

	@BeforeMethod
	public void SetUp() throws ClientProtocolException, IOException, JSONException {
		testbase = new testBase();

		serviceUrl = prop.getProperty("URL");
		apiUrl = prop.getProperty("serviceURL");
		// https://reqres.in/api/users
		url = serviceUrl + apiUrl;
	}

	@Test
	public void postApiTest() throws JsonGenerationException, JsonMappingException, IOException, JSONException {
		restclient = new restClient();
		HashMap<String, String> headerMap = new HashMap<String, String>();
		headerMap.put("content-type", "application/json");

		// jackson API:
		ObjectMapper mapper = new ObjectMapper();
		Users users = new Users("morpheus", "leader"); //expected users object

		// Object to JSON file:
		mapper.writeValue(new File("F:\\WSTEST\\RestAPI\\src\\main\\java\\Com\\data\\users.json"), users);

		//java object to json in string
		String userJsonString = mapper.writeValueAsString(users);
		System.out.println(userJsonString);

		closeableHttpResponse = restclient.post(url, userJsonString, headerMap);

		// 1.Status code
		int statusCode = closeableHttpResponse.getStatusLine().getStatusCode();
		Assert.assertEquals(statusCode, testbase.RESPONSE_STATUS_CODE_201);
		
		//2. jsonString:
		String responseString = EntityUtils.toString(closeableHttpResponse.getEntity(),"UTF-8");
		
		JSONObject responseJson = new JSONObject(responseString); // Convert into JSON String
		System.out.println("The response from API" + responseJson);
		
        //json to java object	
		Users usersRespObj = mapper.readValue(responseString, Users.class); //actual users object
		System.out.println(usersRespObj);
		
		Assert.assertTrue(users.getName().equals(usersRespObj.getName()));
		
		Assert.assertTrue(users.getJob().equals(usersRespObj.getJob()));
		
		System.out.println(usersRespObj.getId());
		System.out.println(usersRespObj.getCreatedAt());

	}

}
